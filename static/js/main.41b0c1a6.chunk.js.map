{"version":3,"sources":["Redux/utilits/FoolowUnHelper.js","Redux/users-reducer.ts","api/server-requests.ts","Redux/apps-reducer.ts","Redux/store.ts","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","useStyle.js","App.js","serviceWorker.js","index.js","Redux/auth-reducer.ts","Components/Header/Header.module.css","loader/Loader.jsx","Redux/Profle-reducer.ts"],"names":["FollowUnfollow","state","action","follow","users","map","u","id","followed","initialState","isLoader","pageSize","totalUsersCount","currentPage","isLoad","type","UnFollowSet","FollowInquiry","dispatch","a","data","resultCode","UnFollowInquiry","UnFollow","TakeDataUsers","page","usersDataApi","total","totalCount","user","items","UsersReducer","instance","axios","create","baseURL","withCredentials","headers","get","then","res","userId","post","delete","authApi","authRequest","authLoginDelete","authLoginPost","email","password","rememberMe","captcha","SecurityCaptcha","ProfileApi","profile","profilePhoto","photProfile","formData","FormData","append","put","saveProfile","ProfileStatus","initialized","appReducer","rootReducer","combineReducers","auth","AuthReducer","form","formReducer","usersData","ProfileRedcer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","props","className","styles","header","isAuth","login","logo","src","alt","myGiven","onClick","LoginDelete","Button","loginSet","variant","color","to","connect","RequestinApi","useEffect","useStyles","makeStyles","theme","root","display","marginLeft","spacing","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","ProfileContainer","React","lazy","UsersContainer","SettingsContainer","Login","AppContainer","withRouter","initializeApp","promise","Promise","all","classes","useTheme","useState","open","setOpen","Loader","CreateNav","path","ListItem","button","ListItemIcon","icon","ListItemText","name","withSuspense","Component","Suspense","fallback","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Drawer","paper","direction","Divider","List","PermIdentityIcon","SettingsIcon","MusicNoteIcon","PeopleOutlineIcon","paragraph","render","exact","App","basename","process","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","receivingData","payload","response","responce","url","messages","length","stopSubmit","_error","module","exports","postGet","status","img","text","like","addPost","ProfielPhoto","ProfileSet","ProfilePhoto","photos","SaveProfile","getState","reject","ProfileStatusGet","addPOst"],"mappings":"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","file":"static/js/main.41b0c1a6.chunk.js","sourcesContent":["export const FollowUnfollow = (state,action,follow)=>{\r\n    \r\n      return  state.users.map(u=>{\r\n            if(u.id === action.id){\r\n              return{\r\n                  ...u,\r\n                  followed:follow\r\n              }\r\n            }\r\n            return u;\r\n           })  \r\n    \r\n};","import {users} from \"../api/server-requests\";\r\nimport { FollowUnfollow } from \"./utilits/FoolowUnHelper\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStateType } from \"./store\";\r\nconst USERS = 'USERS';\r\nconst IS_LOADER = 'IS_LOADER';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst CURRENT_PAGE = 'CURRENT_PAGE';\r\nconst FOLLOW  = 'FOLLOW';\r\nconst UN_FOLLOW = 'UN_FOLLOW';\r\n\r\ntype photosType = {\r\n    small:string|null,\r\n    large:string|null, \r\n}\r\n// ---------\r\n  export  type UserType = {\r\n    name: string,\r\n    id: number,\r\n    status: string,\r\n    photos: photosType,\r\n    followed: boolean,\r\n}; \r\n// ---------------\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    isLoader: false,\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n};\r\ntype InitialState = typeof initialState;\r\n\r\n\r\n\r\n\r\nconst UsersReducer = (state = initialState, action:ActionTypes):InitialState => {\r\n    switch (action.type) {\r\n        case USERS:{\r\n            return {\r\n                ...state,\r\n                users:action.user\r\n            }\r\n        }\r\n        case IS_LOADER:{\r\n            return {\r\n                ...state,\r\n                isLoader:action.isLoad\r\n            }\r\n        }  case SET_TOTAL_USERS_COUNT:{\r\n            return {\r\n                ...state,\r\n                totalUsersCount:action.total\r\n            }\r\n        }case CURRENT_PAGE:{\r\n            return {\r\n                ...state,\r\n                currentPage:action.page\r\n            }\r\n        }\r\n       case FOLLOW:{\r\n           return{\r\n               ...state,\r\n               users:FollowUnfollow(state,action,true),\r\n           }\r\n       }\r\n        case UN_FOLLOW:{\r\n           return{\r\n               ...state,\r\n               users:FollowUnfollow(state,action,false),\r\n           }\r\n       }\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ActionTypes = usersDataActionType\r\n|setToralUsersCountActionType\r\n|setCurrentPageActionType\r\n|followActionsType\r\n|UnFollowSetActionType|isLoaderActionType\r\n\r\ntype usersDataActionType = {\r\n    type:typeof  USERS,\r\n    user:Array<UserType>\r\n}\r\nconst usersData = (user:Array<UserType>):usersDataActionType=>({type:USERS,user})\r\ntype isLoaderActionType = {\r\n    type: typeof  IS_LOADER,\r\n    isLoad:boolean,\r\n}\r\nconst isLoader = (isLoad:boolean):isLoaderActionType=>({type:IS_LOADER,isLoad})\r\ntype setToralUsersCountActionType = {\r\n    type:typeof SET_TOTAL_USERS_COUNT,\r\n    total:number,\r\n}\r\nconst setToralUsersCount = (total:number):setToralUsersCountActionType=>({type:SET_TOTAL_USERS_COUNT,total});\r\ntype setCurrentPageActionType = {\r\n    type:typeof CURRENT_PAGE,\r\n    page:number,\r\n\r\n}\r\nconst setCurrentPage = (page:number):setCurrentPageActionType=>({type:CURRENT_PAGE,page})\r\ntype followActionsType = {\r\n    type:typeof FOLLOW,\r\n    id:number\r\n}\r\nconst follow  = (id:number):followActionsType=>({type:FOLLOW,id})\r\n type UnFollowSetActionType = {\r\n    type: typeof UN_FOLLOW,\r\n    id:number\r\n }\r\nconst UnFollowSet  = (id:number):UnFollowSetActionType=>({type:UN_FOLLOW,id})\r\n\r\n \r\n//  const  FollowInquiryApi = ()=>{}\r\n\r\nexport type ThunkType = ThunkAction < Promise < void > , AppStateType, unknown, ActionTypes >\r\n\r\nexport const FollowInquiry = (id:number):ThunkType=> async (dispatch)=>{\r\n   let response  = await users.follow(id);\r\n   if(response.data.resultCode ===0){\r\n    dispatch(follow(id));\r\n   }\r\n}\r\nexport const UnFollowInquiry = (id:number):ThunkType=> async (dispatch)=>{\r\n   let response  = await users.UnFollow(id);\r\n   if(response.data.resultCode ===0){\r\n    dispatch(UnFollowSet(id));\r\n   }\r\n}\r\n\r\nexport const TakeDataUsers = (currentPage:number,pageSize:number):ThunkType => async (dispatch) => {\r\n    dispatch(isLoader(true));\r\n    dispatch(setCurrentPage(currentPage))\r\n    let usersDataApi = await users.users(currentPage,pageSize);\r\n    dispatch(isLoader(false));\r\n    dispatch(setToralUsersCount(usersDataApi.totalCount));\r\n    dispatch(usersData(usersDataApi.items));\r\n}\r\nexport default UsersReducer;","import  axios from \"axios\";\r\nimport { ProfileType } from \"../types/types\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  withCredentials: true,\r\n  headers: {\r\n    \"API-KEY\": \"a57353aa-096d-4408-9b17-7f7595fb4013\"\r\n  }\r\n});\r\n\r\ntype usersItemsTypes = {\r\n  id:number,\r\n  name:string,\r\n  photos:{\r\n    small: null|string,\r\n    large: null|string,\r\n  },\r\n  status:string,\r\n  followed:boolean,\r\n}\r\n\r\ntype UsersType = {\r\n   items: Array < usersItemsTypes >,\r\n   totalCount: number,\r\n   error: string,\r\n   \r\n};\r\nexport const users = {\r\n  users(currentPage:number, pageSize:number) {\r\n    return instance.get<UsersType>(`users?page=${currentPage}&count=${pageSize}`).then(res=>res.data);\r\n  },\r\n  follow(userId:number) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n  UnFollow(id:number) {\r\n    return instance.delete(`follow/${id}`);\r\n  }\r\n};\r\nexport const authApi = {\r\n  authRequest() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  authLoginDelete() {\r\n    return instance.delete(`auth/login`);\r\n  },\r\n  authLoginPost(email:string, password:string, rememberMe:boolean = false, captcha:string|null) {\r\n    return instance.post(`auth/login`, {\r\n      email,\r\n      password,\r\n      rememberMe,\r\n      captcha\r\n    });\r\n  },\r\n  SecurityCaptcha() {\r\n    return instance.get(`security/get-captcha-url`);\r\n  }\r\n};\r\n//put\r\nexport const ProfileApi = {\r\n  profile(id:number) {\r\n    return instance.get(`profile/`+id);\r\n  },\r\n  profilePhoto(photProfile:string){\r\n    const formData = new FormData();\r\n    formData.append('image',photProfile)\r\n    return instance.put(`profile/photo`,formData,{\r\n      headers:{\r\n             \"Content-Type\":'multipart/form-data'\r\n      }\r\n    });\r\n  },\r\n  saveProfile(profile:ProfileType){\r\n     return instance.put(`profile`,profile)\r\n  },\r\n  ProfileStatus(id:number){\r\n      return instance.get(`profile/status/${id}`)\r\n  }\r\n};\r\n","import {RequestinApi} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\ntype InitialState = typeof initialState; \r\nconst appReducer = (state = initialState, action:any):InitialState => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\ntype initializedSuccessActionTypes = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\nexport const initializedSuccess = ():initializedSuccessActionTypes => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch:any) => {\r\n    let promise = dispatch(RequestinApi());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport AuthReducer from \"./auth-reducer\";\r\nimport ProfileRedcer from \"./Profle-reducer\";\r\nimport UsersReducer from \"./users-reducer\";\r\nimport appReducer from \"./apps-reducer\";\r\nconst rootReducer = combineReducers({\r\n    auth:AuthReducer,\r\n    form: formReducer,\r\n    usersData:UsersReducer,\r\n    appReducer:appReducer,\r\n    ProfileRedcer: ProfileRedcer,\r\n});\r\n\r\nexport  type RootReducerType = typeof rootReducer;\r\n\r\nexport type AppStateType = ReturnType<RootReducerType> \r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\nexport default  store;","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Header = (props) => {\r\n    const exite = ()=>{\r\n        props.LoginDelete();\r\n    }\r\n    return (\r\n        <>\r\n            <header className={styles.header}>\r\n                {/* <span className={styles.section}><strong className={styles.nameProjects}>New-post</strong></span> */}\r\n\r\n                {props.isAuth?\r\n                    <span className={styles.login}> <img className={styles.logo}\r\n                                   src=\"https://img.icons8.com/small/16/000000/administrator-male.png\" alt='logo'/> {props.myGiven.login} <button onClick={exite}>Exite</button>\r\n\r\n                </span>:\r\n                    <Button className={styles.loginSet} variant=\"contained\" color=\"primary\">\r\n                        <NavLink  to={'./Login'}>Login</NavLink>\r\n                    </Button>\r\n                }\r\n              {/* <span className={styles.search}><input   type=\"text\" placeholder={'Search'}/></span> */}\r\n            </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React,{useEffect} from 'react';\r\nimport styles from './Header.module.css';\r\nimport Header from \"./Header\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {LoginDelete, RequestinApi} from \"../../Redux/auth-reducer\";\r\n\r\nconst HeaderContainer = (props) => {\r\n    useEffect(()=>{\r\n        props.RequestinApi()\r\n    },[]);\r\n    return (\r\n        <>\r\n            <Header {...props}/>\r\n        </>\r\n    );\r\n};\r\nconst mapStateToProps = (state)=>({\r\n    myGiven:state.auth,\r\n    isAuth:state.auth.isAuth,\r\n});\r\n\r\nexport default compose(connect(mapStateToProps,{RequestinApi,LoginDelete}))(HeaderContainer);\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 240;\r\nexport  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { HashRouter, withRouter, Route, NavLink, Redirect, BrowserRouter } from \"react-router-dom\";\nimport { connect, Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\nimport { compose } from \"redux\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport { initializeApp } from \"./Redux/apps-reducer\";\nimport Loader from \"./loader/Loader\";\nimport clsx from \"clsx\";\n\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\nimport PeopleOutlineIcon from \"@material-ui/icons/PeopleOutline\";\n\nimport { useStyles } from \"./useStyle\";\n\n\nconst ProfileContainer = React.lazy(() =>\n  import(\"./Components/Article/Profile/ProfileContainer\")\n);\nconst UsersContainer = React.lazy(() =>\n  import(\"./Components/Article/Users/UsersContaier\")\n);\nconst SettingsContainer = React.lazy(() =>\n  import(\"./Components/Article/Settings/SettingsContainer\")\n);\nconst Login = React.lazy(() => import(\"./Components/Article/Login/Login\"));\n\nfunction AppSet(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    props.initializeApp();\n  }, []);\n  if (!props.initialized) {\n    return <Loader />;\n  }\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const CreateNav = (props) => {\n    return (\n      <NavLink className=\"links\" to={props.path}>\n        <ListItem button>\n          <ListItemIcon>\n            <props.icon />\n          </ListItemIcon>\n          <ListItemText>\n             {props.name}         \n          </ListItemText>\n        </ListItem>\n      </NavLink>\n    );\n  };\n\n   const  withSuspense= (Component)=>{\n    return (props)=>{\n      return <React.Suspense fallback={<Loader/>}><Component {...props}/></React.Suspense>\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            <HeaderContainer />\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <CreateNav icon={PermIdentityIcon} name=\"Profile\" path=\"/profile\" />\n          <CreateNav icon={SettingsIcon} name=\"Settings\" path=\"/settings\" />\n          <CreateNav icon={MusicNoteIcon} name=\"Music\" path=\"/music\" />\n          <CreateNav icon={PeopleOutlineIcon} name=\"Users\" path=\"/users\" />\n        </List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph>\n         \n        {/* <Route  path='/' render={() => <Redirect from=\"/\" to=\"/profile\" />}/> */}\n        \n            <Route\n              path=\"/profile/:userId?\"\n              render={ withSuspense( ProfileContainer )}\n            />\n            <Route path=\"/users\" render={withSuspense (UsersContainer )} />\n            <Route\n                \n              path=\"/settings\"\n              render={withSuspense (SettingsContainer )}\n            />\n            <Route exact path=\"/login\" render={() => <Login />} />\n \n\n      \n        </Typography>\n      </main>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  initialized: state.appReducer.initialized,\n});\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(AppSet)\n\nconst App = () => {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authApi} from \"../api/server-requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\nconst DATA = 'DATA';\r\nconst CAPTCHA_URL = 'CAPTCHA_URL';\r\ntype InitialStateType  = {\r\n    id: number|null,\r\n    email: string |null\r\n    login: string |null\r\n    isAuth: boolean\r\n    captcha:null|string\r\n}\r\nconst initialState:InitialStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captcha:null,\r\n};\r\nconst AuthReducer = (state = initialState, action:AuthReducerType):InitialStateType => {\r\n    switch (action.type) {\r\n        case DATA:\r\n        case CAPTCHA_URL:{\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\ntype receivingDataActionTypePayload= {\r\n    id: number|null,\r\n    email: string |null,\r\n    login: string |null,\r\n    isAuth: boolean,\r\n}\r\ntype receivingDataActionType = {\r\n    type:typeof DATA, \r\n    payload:receivingDataActionTypePayload\r\n\r\n}\r\nconst receivingData = (id:number|null, email:string|null, login:string|null, isAuth:boolean):receivingDataActionType => ({\r\n    type: DATA, \r\n    payload: {id, email, login, isAuth}});\r\n\r\ntype captchaUrlActionType = {\r\n    type: typeof CAPTCHA_URL,\r\n     payload: {captcha:string}\r\n}\r\nconst captchaUrl = (captcha:string):captchaUrlActionType => ({type: CAPTCHA_URL, payload: {captcha}});\r\n\r\n\r\nconst SecurityCaptcha = ()=> async (dispatch:any)=>{\r\n    const response = await authApi.SecurityCaptcha();\r\n    if (response){\r\n        dispatch(captchaUrl(response.data.url));\r\n    }\r\n}\r\nexport const RequestinApi = () => async (dispatch:any) => {\r\n    let response = await authApi.authRequest();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(receivingData(id, email, login, true));\r\n    }\r\n};\r\ntype AuthReducerType  = receivingDataActionType|captchaUrlActionType;\r\nexport const authLoginPost = (email:string,password:string,rememberMe:boolean,captcha:string)=> async (dispatch:any)=>{\r\n    let responce =  await  authApi.authLoginPost(email,password,rememberMe,captcha);\r\n    if (responce.data.resultCode ===0){\r\n        dispatch(RequestinApi());\r\n    } else {\r\n        if (responce.data.resultCode ===10){\r\n        dispatch(SecurityCaptcha())\r\n        }\r\n        let messages = responce.data.messages.length >0 ? responce.data.messages[0]:'some Errors';\r\n      dispatch( stopSubmit('SignIn',{_error:messages}));\r\n    }\r\n};\r\nexport const LoginDelete = () => async (dispatch:any) => {\r\n    let res = await authApi.authLoginDelete();\r\n    if (res.data.resultCode === 0) {\r\n      dispatch(receivingData(null,null,null,false,));\r\n    }\r\n};\r\nexport default AuthReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3AGDK\",\"login\":\"Header_login__2mI6j\",\"logo\":\"Header_logo__28yZv\",\"loginSet\":\"Header_loginSet__1ESQJ\"};","import React from 'react';\r\nimport  './Loader.css';\r\n\r\n\r\nconst Loader = ()=>{\r\n    return(\r\n        <img className='loader' src={'https://i.pinimg.com/originals/76/77/ed/7677edd5a44b10130b8824ca020ba60b.gif'} alt=\"loader\"/>\r\n    )\r\n};\r\nexport default  Loader;","import { ProfileApi } from \"../api/server-requests\";\r\nimport {stopSubmit} from 'redux-form';\r\nimport { ProfileType, photosType, postType } from \"../types/types\";\r\nconst FOLLOWING_IN_PROFGRESS = \"FOLLOWING_IN_PROFGRESS\";\r\nconst PROFILE_PHOTO_SAVE = \"PROFILE_PHOTO_SAVE\";\r\nconst ADD_POS = \"ADD_POS\";\r\nconst PROFILE = \"PROFILE\";\r\nconst IS_LOADER = 'IS_LOADER';\r\nconst STATUS_GET = 'STATUS_GET';\r\nconst initialState = {\r\n  postGet: \"\",\r\n  profile: null as ProfileType |null,\r\n  isLoader: false,\r\n  status:'',\r\n  post: [\r\n    {\r\n      id: 1,\r\n      img:\r\n        \"https://png.pngtree.com/element_our/20190604/ourmid/pngtree-user-avatar-boy-image_1482937.jpg\",\r\n      text: \"hello world\",\r\n      like: 1\r\n    },\r\n    {\r\n      id: 2,\r\n      img:\r\n        \"https://i.pinimg.com/originals/ed/61/8c/ed618c92a295b74449839ab5f6f947ee.jpg\",\r\n      text: \"test\",\r\n      like: 155\r\n    },\r\n    {\r\n      id: 3,\r\n      img:\r\n        \"https://img.favpng.com/2/12/12/computer-icons-portable-network-graphics-user-profile-avatar-png-favpng-L1ihcbxsHbnBKBvjjfBMFGbb7.jpg\",\r\n      text: \"TypeScript\",\r\n      like: 121\r\n    }\r\n  ] as Array<postType>,\r\n \r\n};\r\ntype  InitialState = typeof initialState; \r\nconst ProfileRedcer = (state = initialState, action:any):InitialState => {\r\n  switch (action.type) {\r\n    case ADD_POS: {\r\n      let addPOst = {\r\n        id: 4,\r\n        img:\r\n          \"https://i.pinimg.com/originals/ed/61/8c/ed618c92a295b74449839ab5f6f947ee.jpg\",\r\n        text: action.postGet,\r\n        like: 0\r\n      };\r\n      return {\r\n        ...state,\r\n        post: [addPOst, ...state.post]\r\n        // postGet:''\r\n      };\r\n    }\r\n    case PROFILE: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      };\r\n    }\r\n    case IS_LOADER:{\r\n      return {\r\n          ...state,\r\n          isLoader:action.isLoad\r\n      }\r\n  }\r\n    case PROFILE_PHOTO_SAVE: {\r\n      return {\r\n        ...state,profile: {\r\n          ...state.profile,\r\n          photos: action.photProfile\r\n        } as ProfileType,\r\n      };\r\n    }\r\n    case STATUS_GET:{\r\n      return{\r\n        ...state,\r\n        status:action.status,\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\ntype addPostActionType = {\r\n  type: typeof ADD_POS,\r\n  postGet:string,\r\n}\r\nexport const addPost = (postGet:string):addPostActionType => ({ type: ADD_POS, postGet })\r\n\r\ntype ProfileActionType = {\r\n  type: typeof PROFILE,\r\n  profile:ProfileType\r\n}\r\n\r\nconst Profile = (profile:ProfileType):ProfileActionType => ({ type: PROFILE, profile })\r\n\r\ntype ProfielPhotoActionType = {\r\n  type: typeof PROFILE_PHOTO_SAVE,\r\n  photProfile:photosType\r\n}\r\nconst ProfielPhoto = (photProfile:photosType):ProfielPhotoActionType => ({ type: PROFILE_PHOTO_SAVE, photProfile })\r\n\r\n\r\ntype isLoaderActionType = {\r\n  type:typeof IS_LOADER,\r\n  isLoad:boolean,\r\n}\r\n\r\nconst isLoader = (isLoad:boolean):isLoaderActionType=>({type:IS_LOADER,isLoad})\r\n\r\ntype statusGetActionType = {\r\n  type: typeof STATUS_GET,\r\n  status:string,\r\n}\r\nconst statusGet = (status:string):statusGetActionType=>({type:STATUS_GET,status})\r\n\r\n\r\nexport const ProfileSet = (id:number) => async (dispatch:any) => {\r\n  const res = await ProfileApi.profile(id)\r\n  dispatch(Profile(res.data))\r\n};\r\nexport const ProfilePhoto = (photProfile:string) => async (dispatch:any) => {\r\n  dispatch(isLoader(false))\r\n  const response = await ProfileApi.profilePhoto(photProfile)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(isLoader(true))\r\n    dispatch(ProfielPhoto(response.data.data.photos))\r\n  }\r\n};\r\n\r\nexport const  SaveProfile = (profile:ProfileType)=> async (dispatch:any,getState:any)=>{\r\n         let id = getState().auth.id\r\n       const response = await ProfileApi.saveProfile(profile)\r\n    \r\n    if (response.data.resultCode ===0) {\r\n      dispatch(ProfileSet(id))\r\n    } else{\r\n      let messages =response.data.messages.length>0? response.data.messages[0]:'some error'\r\n     dispatch(stopSubmit('fromData',{_error:messages}))\r\n     return Promise.reject(messages)\r\n    }\r\n};\r\n\r\nexport const ProfileStatusGet = (id:number)=> async (dispatch:any)=>{\r\n      const response = await ProfileApi.ProfileStatus(id)\r\n      dispatch(statusGet(response.data))\r\n}\r\nexport default ProfileRedcer\r\n"],"sourceRoot":""}