{"version":3,"sources":["Components/FieldLevelValidationForm/FieldLevelValidationForm.js","Components/FieldLevelValidationForm/FieldLevelValidationForm.module.css","Components/Article/Login/Login.module.css","Components/Article/Login/Login.jsx"],"names":["requiredFile","value","maxLength","max","length","CraeteFildValidation","input","meta","props","hasError","touched","error","className","styles","loginError","errorText","module","exports","maxLengthSet","SignInPage","reduxForm","form","onSubmit","handleSubmit","component","name","type","validate","placeholder","stopError","stopErrorCaptcha","captcha","src","alt","connect","state","isAuth","auth","authLoginPost","to","values","email","password","checkbox"],"mappings":"iQAEaA,EAAe,SAAAC,GACxB,IAAIA,EACJ,MAAO,uBAEEC,EAAY,SAAAC,GAAG,OAAI,SAAAF,GAC5B,GAAIA,EAAMG,OAASD,EAAK,MAAM,WAAN,OAAkBA,EAAlB,yBAIfE,EAAuB,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAMC,EAAmB,EAAnBA,KAAQC,EAAW,gCACvDC,EAAWF,EAAKG,SAAWH,EAAKI,MACpC,OAAQ,yBAAKC,UAAWC,IAAOC,YACxB,2CAAUR,EAAWE,EAArB,CAA2BI,UAAWH,EAAUI,IAAOF,MAAO,MAC9DF,GAAU,6BACT,yBAAKG,UAAWC,IAAOC,WAAY,GAAGD,IAAOE,WAAYR,EAAKI,W,oBCf1EK,EAAOC,QAAU,CAAC,MAAQ,wCAAwC,UAAY,4CAA4C,WAAa,+C,oBCAvID,EAAOC,QAAU,CAAC,UAAY,yBAAyB,iBAAmB,kC,iCCD1E,yGAuBIC,EAAgBhB,YAAU,IAiBxBiB,EAAaC,YAAU,CAACC,KAAM,UAAjBD,EAhBJ,SAACZ,GACZ,OACI,kBAAC,IAAD,CAAMc,SAAUd,EAAMe,cAClB,kBAAC,IAAD,CAAOC,UAAWnB,IAAsBoB,KAAM,QAASC,KAAM,QAASC,SAAU,CAAC3B,IAAakB,GAAeU,YAAa,UAC1H,kBAAC,IAAD,CAAOJ,UAAWnB,IAAsBoB,KAAM,WAAYC,KAAM,WAAYC,SAAU,CAAC3B,IAAakB,GAAeU,YAAa,aAChI,kBAAC,IAAD,CAAOJ,UAAW,QAASC,KAAM,WAAYC,KAAM,aAClDlB,EAAMG,OAAQ,yBAAKC,UAAWC,IAAOgB,WAAYrB,EAAMG,OAEzD,yBAAKC,UAAWC,IAAOiB,kBAClBtB,EAAMuB,SAAY,6BAAK,yBAAKC,IAAKxB,EAAMuB,QAASE,IAAI,aACpDzB,EAAMuB,SAAY,kBAAC,IAAD,CAAOP,UAAWnB,IAAsBoB,KAAM,UAAWE,SAAU,CAAC3B,IAAakB,GAAcU,YAAa,aAElI,2CASGM,uBAJO,SAACC,GAAD,MAAU,CAC5BC,OAAOD,EAAME,KAAKD,OAClBL,QAAQI,EAAME,KAAKN,WAEgB,CAACO,mBAAzBJ,EApCD,SAAC1B,GAIX,OAAIA,EAAM4B,OACC,kBAAC,IAAD,CAAUG,GAAI,aAEjB,oCAEH,qCACD,kBAACpB,EAAD,CAAYG,SATA,SAACkB,GACbhC,EAAM8B,cAAcE,EAAOC,MAAMD,EAAOE,SAASF,EAAOG,SAASH,EAAOT,UAQvCA,QAASvB,EAAMuB","file":"static/js/5.a2f5dd67.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './FieldLevelValidationForm.module.css'\r\nexport const requiredFile = value => {\r\n    if (value) return undefined;\r\n    return 'Field is  Required ';\r\n};\r\nexport const maxLength = max => value => {\r\n    if (value.length > max) return `Must be ${max} characters or less`;\r\n    return undefined;\r\n};\r\n\r\nexport const CraeteFildValidation = ({input,meta,...props}) => {\r\n    let hasError = meta.touched && meta.error;\r\n    return (<div className={styles.loginError}>\r\n           <input{...input} {...props}className={hasError? styles.error :''}/>\r\n         { hasError&&<div>\r\n            <div className={styles.loginError +\"\"+styles.errorText}>{meta.error}</div>\r\n        </div>}\r\n    </div>);\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FieldLevelValidationForm_error__3S_Dw\",\"errorText\":\"FieldLevelValidationForm_errorText__3QAIB\",\"loginError\":\"FieldLevelValidationForm_loginError__20Uws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stopError\":\"Login_stopError__1t5fn\",\"stopErrorCaptcha\":\"Login_stopErrorCaptcha__3TV25\"};","import React from 'react';\r\nimport styles from './Login.module.css'\r\nimport {Field, Form, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLoginPost} from \"../../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {CraeteFildValidation, maxLength, requiredFile} from \"../../FieldLevelValidationForm/FieldLevelValidationForm\";\r\n\r\n\r\nconst Login = (props)=>{\r\n    let loginPost = (values)=>{\r\n        props.authLoginPost(values.email,values.password,values.checkbox,values.captcha);\r\n    };\r\n    if (props.isAuth){\r\n        return <Redirect to={'/Profile'}/>\r\n    }\r\n    return (<>\r\n\r\n         <h1>Login</h1>\r\n        <SignInPage onSubmit={loginPost} captcha={props.captcha}/>\r\n\r\n    </>)\r\n};\r\nlet maxLengthSet  = maxLength(40);\r\nconst SignIn = (props) => {\r\n    return (\r\n        <Form onSubmit={props.handleSubmit}>\r\n            <Field component={CraeteFildValidation} name={'email'} type={'email'} validate={[requiredFile,maxLengthSet]} placeholder={'email'}/>\r\n            <Field component={CraeteFildValidation} name={'password'} type={'password'} validate={[requiredFile,maxLengthSet]} placeholder={'password'}/>\r\n            <Field component={'input'} name={'checkbox'} type={'checkbox'}/>\r\n            {props.error&& <div className={styles.stopError}>{props.error}\r\n        </div>}\r\n           <div className={styles.stopErrorCaptcha}>\r\n               {props.captcha &&  <div><img src={props.captcha} alt=\"captcha\"/></div>}\r\n               {props.captcha &&  <Field component={CraeteFildValidation} name={'captcha'} validate={[requiredFile,maxLengthSet]}placeholder={'captcha'}/>}\r\n           </div>\r\n            <button>add</button>\r\n        </Form>\r\n    );\r\n};\r\nconst SignInPage = reduxForm({form: \"SignIn\"})(SignIn);\r\nlet mapStateToProps = (state)=>({\r\n    isAuth:state.auth.isAuth,\r\n    captcha:state.auth.captcha,\r\n});\r\nexport default connect(mapStateToProps,{authLoginPost})(Login);\r\n"],"sourceRoot":""}